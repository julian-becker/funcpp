cmake_minimum_required(VERSION 3.3)
project (TestApp1)
 
set (INC_DIR ${CMAKE_CURRENT_SOURCE_DIR}/include)
set (SRC_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)
 
set(APP_SRCS
	${SRC_DIR}/main.cpp
)

 
add_executable(TestApp1 ${APP_SRCS})
include_directories("${FUNCPP_MODULES_DIR}/typeclass/include")

include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/accumulators/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/algorithm/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/align/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/any/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/array/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/asio/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/assert/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/assign/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/atomic/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/bimap/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/bind/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/chrono/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/circular_buffer/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/compatibility/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/compute/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/concept_check/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/config/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/container/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/context/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/conversion/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/convert/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/core/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/coroutine/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/coroutine2/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/crc/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/date_time/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/detail/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/disjoint_sets/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/dll/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/dynamic_bitset/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/endian/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/exception/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/fiber/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/filesystem/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/flyweight/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/foreach/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/format/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/function/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/function_types/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/functional/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/fusion/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/geometry/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/gil/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/graph/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/graph_parallel/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/hana/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/heap/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/icl/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/integer/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/interprocess/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/intrusive/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/io/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/iostreams/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/iterator/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/lambda/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/lexical_cast/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/local_function/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/locale/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/lockfree/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/log/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/logic/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/math/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/metaparse/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/move/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/mpi/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/mpl/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/msm/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/multi_array/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/multi_index/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/multiprecision/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/numeric/conversion/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/numeric/interval/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/numeric/odeint/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/numeric/ublas/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/optional/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/parameter/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/phoenix/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/polygon/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/pool/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/predef/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/preprocessor/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/program_options/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/property_map/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/property_tree/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/proto/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/ptr_container/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/python/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/qvm/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/random/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/range/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/ratio/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/rational/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/regex/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/scope_exit/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/serialization/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/signals/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/signals2/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/smart_ptr/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/sort/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/spirit/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/statechart/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/static_assert/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/system/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/test/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/thread/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/throw_exception/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/timer/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/tokenizer/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/tr1/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/tti/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/tuple/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/type_erasure/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/type_index/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/type_traits/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/typeof/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/units/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/unordered/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/utility/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/uuid/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/variant/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/vmd/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/wave/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/winapi/include")
include_directories("${FUNCPP_EXTERNALS_DIR}/boost/libs/xpressive/include")
